<style lang="less">
.goodDetails{
  overflow: hidden;
  background-color: #f5f5f5;
//   height: 100vh;
  &-good{
    &-img{
      width: 750rpx;
      height: 320rpx;
      image{
        width: 750rpx;
        height: 320rpx;
      }
    }
    &-detail{
      padding-top: 20rpx;
      background-color: #fff;
      &-price{
        padding-left: 30rpx;
        font-size: 32rpx;
        height: 62rpx;
        line-height: 62rpx;
        color: #ff4e4e;
        font-weight: 600;
      }
      &-name{
        font-size: 30rpx;
        height: 60rpx;
        line-height: 60rpx;
        color: #333;
        margin-bottom: 5rpx;
        font-weight: 600;
        padding-left: 30rpx;
        .name{
          margin-right: 20rpx;
        }
      }
      &-size{
        font-size: 28rpx;
        color: #999;
        height: 58rpx;
        line-height: 58rpx;
        padding-left: 30rpx;
        margin-bottom: 15rpx;
        .unit{
          margin-right: 20rpx;
        }
      }
      &-desc{
        font-size: 28rpx;
        color: #999;
        line-height: 36rpx;
        padding: 30rpx 25rpx;
        border-top: 1rpx solid #dcdcdc;
        // border-bottom: 1rpx solid #dcdcdc;
      }
      &-buyNum{
        padding: 0 30rpx;
        display: flex;
        justify-content: space-between;
        width: 690rpx;
        height: 110rpx;
        line-height: 110rpx;
        color: #333;
        position: relative;
        .buy{
          width: 112rpx;
          font-size: 28rpx;
        }
      }
      &-image{
        border-top: 1rpx solid #dcdcdc;
        padding: 30rpx;
        margin-bottom: 80rpx;
        .title{
          font-size: 28rpx;
          color: #333;
          margin-bottom: 20rpx;
        }
        image{
          width: 100%;
          height: 300rpx;
        }
      }
    }
  }
  &-handle{
    display: flex;
    position: fixed;
    bottom: 0;
    left: 0;
    height: 100rpx;
    line-height: 100rpx;
    width: 750rpx;
    text-align: center;
    z-index: 5;
    &-left{
      width: 295rpx;
      display: flex;
      font-size: 18rpx;
      background-color: #fff;
      color: #999;
      text-align: center;
      &-collect{
        flex:1;
        position: relative;
        image{
          width: 40rpx;
          height: 40rpx;
        }
      }
      &-cart{
        flex:1;
        position: relative;
        image{
          width: 45rpx;
          height: 40rpx;
        }
        .cartNum{
          position:absolute;
          top: 12rpx;
          right: 26rpx;
          display: block;
          height: 30rpx;
          padding: 0 10rpx;
          background-color:#ff4e4e;
          color: #fff;
          border-radius: 15rpx;
          line-height: 30rpx;
          overflow: hidden;
          font-size: 20rpx;
        }
      }
      &-word{
        position: absolute;
        top: 25rpx;
        left: 50%;
        transform: translateX(-50%);
      }
      &-count{
        width: 30rpx;
        height: 25rpx;
        line-height: 25rpx;
        border-radius: 10rpx;
        background-color: #1c80b2;
        position: absolute;
        top: 10rpx;
        right: 35rpx;
        line-height: 25rpx;
        color: #fff;
        font-size: 18rpx;
      }
    }
    &-right{
      width: 455rpx;
      display: flex;
      font-size: 26rpx;
      &-add{
        flex:1;
        background-color: #19a78f;
        color: #fff;
      }
      &-buy{
        flex:1;
        background-color: #1c80b2;
        color: #fff;
      }
    }
  }
  .disable{
    color: #999!important;
  }
  .inputDisable{
    color: #999!important;
  }
  .addCartDisable{
    background-color: #ccc!important;
  }
  .buyNowDisable{
    background-color: #bbb!important;
  }
  .pickColor{
    display: inline-block;
  }
  &-info{
    width: 750rpx;
    height: 100vh;
    position:fixed;
    left: 0;
    top: 0;
    z-index:10;
    &-mask{
      width: 750rpx;
      height: 100vh;
      background-color: rgba(0, 0, 0, 0.4);
    }
    &-main{
      width: 750rpx;
      height: 800rpx;
      position: absolute;
      left: 0;
      bottom: 0;
      background-color: #fff;
      z-index:11;
      .goodDetails-info-choose{
        font-size: 30rpx;
        padding: 30rpx 40rpx;
        .info-detail{
          margin-bottom: 50rpx;
          image{
            width: 200rpx;
            height: 200rpx;
            float: left;
          }
          &-main{
            height: 200rpx;
            width: 100%;
            box-sizing: border-box;
            padding-left: 240rpx;
            view{
              margin-bottom: 20rpx;
            }
          }
        }
        .info-color{
          margin-bottom: 50rpx;
          view{
            margin-bottom: 20rpx;
            .info-color-item{
              display: inline-block;
              padding: 5rpx 50rpx;
              background-color: #eee;
              border: 1px solid #eee;
              color: #333;
              border-radius: 10rpx;
              margin-right: 30rpx;
              &.active{
                background-color: #fff;
                border-color: #ff4e4e;
                color: #ff4e4e;
              }
            }
          }
        }
        .info-num{
          margin-bottom: 30rpx;
          .inventory{
            font-size: 28rpx;
            display: flex;
            &-num{
            // margin-right: 50rpx;
              color: #333;
            }
            &-tip{
              color: #ff4e4e;
            }
          }
          .buy-count{
            display: flex;
            border: 1rpx solid #dcdcdc;
            height: 40rpx;
            margin-top: 35rpx;
            margin-right: 30rpx;
            &-down{
              border-right: 1rpx solid #dcdcdc;
            }
            &-up{
              border-left: 1rpx solid #dcdcdc;
            }
            .numBtn{
              width: 40rpx;
              height: 40rpx;
              text-align: center;
              line-height: 40rpx;
              color: #16aa8d;
            }
            input{
              width: 100rpx;
              height: 40rpx;
              line-height: 40rpx;
              min-height: 0;
              text-align: center;
              // color: #333;
            }
          }
        }
      }
      .goodDetails-info-btn{
        position: absolute;
        bottom: 0;
        left: 0;
        width: 750rpx;
        height: 80rpx;
        font-size: 30rpx;
        background-color: #ff4e4e;
        text-align: center;
        line-height: 80rpx;
        color: #fff;
        &.none{
          background-color: #999;
        }
      }
    }
  }
}
</style>
<template>
  <view class="goodDetails">
    <view class="goodDetails-good">
      <!-- <view class="goodDetails-good-img">
        <image src="{{imgBaseUrl + goodDesc.intro_image}}"/>
      </view> -->
      <view class="goodDetails-good-img">
        <swiper duration="{{duration}}" interval="3000" autoplay indicator-dots circular indicator-active-color="#fff" style='width:100%;height:100%;'>
          <block wx:for="{{goodDesc.list}}" wx:key='index'>
            <swiper-item wx:if="{{item}}">
              <image src="{{imgBaseUrl+item}}" class="slide-image" width="355" height="150"/>
            </swiper-item>
          </block>
        </swiper>
      </view>
      <view class="goodDetails-good-detail">
        <view class="goodDetails-good-detail-price">
          ￥{{goodDesc.goods_price}}
        </view>
        <view class="goodDetails-good-detail-name">
          <text class="name">{{goodDesc.goods_name}}</text>
          <text class="size">{{goodDesc.type}}</text>
        </view>
        <view class="goodDetails-good-detail-size">
          <text class="unit">单位:{{goodDesc.unit}}</text>
          <text>颜色：{{goodDesc.color}}</text>
        </view>
        <view class="goodDetails-good-detail-desc">
          商品介绍：{{goodDesc.goods_intro}}
        </view>
        <view class="goodDetails-good-detail-desc">
          商品用途：{{goodDesc.goods_use}}
        </view>
        <view class="goodDetails-good-detail-image">
          <view class="title">商品详细图片：</view>
          <view wx:if="{{goodDesc.intro_image}}">
            <image src="{{imgBaseUrl + goodDesc.intro_image}}"/>
          </view>
        </view>
      </view>
    </view>
    <view class="goodDetails-handle">
      <view class="goodDetails-handle-left">
        <view class="goodDetails-handle-left-collect" bindtap='collectGood'>
          <image src='../images/collect.png' wx:if="{{!isCollect}}"/>
          <image src='../images/collected.png' wx:if="{{isCollect}}"/>
          <view class="goodDetails-handle-left-word">
            <text wx:if="{{!isCollect}}">收藏</text>
            <text wx:if="{{isCollect}}">已收藏</text>
          </view>
        </view>
        <view class="goodDetails-handle-left-cart" bindtap='jumpToCart'>
          <image src='../images/cart.png' wx:if="{{!isAddCart}}"/>
          <image src='../images/cart_active.png' wx:if="{{isAddCart}}"/>
          <text class="cartNum" wx:if="{{goodsList.length > 0}}">{{goodsList.length}}</text>
          <!-- <view class="goodDetails-handle-left-count" wx:if="{{isAddCart}}">{{addCartNum}}</view> -->
          <view class="goodDetails-handle-left-word">购物车</view>
        </view>
      </view>
      <view class="goodDetails-handle-right">
        <!-- <view class="goodDetails-handle-right-add {{buyNum == 0 ? 'addCartDisable' : ''}}" bindtap='addCart()'>加入购物车</view> -->
        <!-- <view class="goodDetails-handle-right-buy {{buyNum == 0 ? 'buyNowDisable' : ''}}" bindtap='buyNowToPay'>立即购买</view> -->
        <view class="goodDetails-handle-right-add" data-code="cart" bindtap='chooseInfo'>加入购物车</view>
        <view class="goodDetails-handle-right-buy" data-code="buy" bindtap='chooseInfo'>立即购买</view>
      </view>
    </view>
    <!-- 选择信息 -->
    <view class="goodDetails-info" wx:if="{{isMask}}" catchtouchmove="myCatchTouch">
      <view class="goodDetails-info-mask" bindtap="closeMask"></view>
      <view class="goodDetails-info-main">
        <view class="goodDetails-info-choose">
          <view class="info-detail">
            <image src="{{imgBaseUrl+goodDesc.goods_image}}"></image>
            <view class="info-detail-main">
              <view style="color:#ff4e4e;font-size:34rpx;font-weight:700;">￥{{goodDesc.goods_price}}</view>
              <view style="color:#999;" wx:if="{{goodDesc.sec_num}}">库存{{goodDesc.sec_num}}件</view>
              <view style="color:#ff4e4e;" wx:if="{{!goodDesc.sec_num}}">暂无库存</view>
              <view><text wx:if="{{chooseColor}}">已选：{{chooseColor}}</text><text wx:if="{{!chooseColor}}">颜色：请选择商品颜色</text></view>
            </view>
          </view>
          <view class="info-color">
            <view>选择颜色</view>
            <view>
              <text wx:for="{{goodDesc.colorArr}}" wx:key="{{index}}" class="info-color-item {{chooseColor == item ? 'active' : ''}}" data-color="{{item}}" bindtap="chooseColor">{{item}}</text>
            </view>
          </view>
          <view class="info-num">
            <view>购买数量</view>
            <view class="inventory">
              <view class="buy-count">
                <view class="buy-count-down numBtn {{buyNum <= 1 ? 'disable' : ''}}" bindtap='changeNum({{-1}})'>-</view>
                <input type="number" value='{{buyNum}}' class="{{buyNum == 0 ? 'inputDisable' : ''}}" bindinput='countNumberInput'/>
                <view class="buy-count-up numBtn {{buyNum >= goodDesc.sec_num ? 'disable' : ''}}" bindtap='changeNum({{1}})'>+</view>
              </view>
          </view>
          </view>
        </view>
        <view class="goodDetails-info-btn {{!goodDesc.sec_num ? 'none' : ''}}" bindtap="sendSure">确定</view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'

  import api from '../api/api'

  export default class GoodDetails extends wepy.page {
    onLoad(opt) {
      this.id = opt.id
    }
    onShow() {
      this.session3rd = wepy.getStorageSync('session3rd')
      this.imgBaseUrl = this.$parent.globalData.imgBaseUrl
      // 获取商品详情
      api.getGoodDesc({
        data: {
          session3rd: this.session3rd,
          id: this.id
        },
        method: 'POST'
      }).then(res => {
        console.log(res, 'id商品详情')
        if (res.code === '200') {
          this.goodDesc = res.extraData.info
          this.goodDesc.num = +this.goodDesc.num
          this.goodDesc.sec_num = +this.goodDesc.sec_num
          // 模拟都有库存
          // this.goodDesc.sec_num = 10
          // 处理颜色
          this.goodDesc.colorArr = this.goodDesc.color.split(',')
          this.$apply()
        }
      })
      // 获取我的购物车--检查是否在购物车里面有
      this.isAddCart = false
      this.totalBuy = 0
      this.getMyCart()
      // 获取我的收藏
      this.getMyCollect()
    }
    onHide() {
      // this.getMyCart()
    }
    config = {
      navigationBarTitleText: '集泰在线商城'
    }
    data = {
      duration: 500,
      session3rd: '',
      // imgBaseUrl: 'http://192.168.8.90',
      imgBaseUrl: '',
      id: '',
      delCollectId: '',
      // 商品详情数据
      goodDesc: {
        color: '白',
        goods_image: '/images/jtds_goods/20180830/153560800153538.jpeg',
        goods_intro: '介绍介绍02',
        goods_name: '商品2',
        goods_order: '2',
        goods_price: '200',
        goods_use: '用途用途用途用途用途02',
        id: '21',
        image1: '/images/jtds_goods_detail/20180830/153560815369001.jpeg',
        image2: '/images/jtds_goods_detail/20180830/153560815372377.jpeg',
        image3: '/images/jtds_goods_detail/20180830/153560815313055.jpeg',
        image4: '',
        image5: '',
        image6: '',
        intro_image: '',
        // 库存
        sec_num: '',
        type: '300ml',
        unit: '箱',
        colorArr: []
      },
      // name: '',
      // price: 720,
      // size: '300ml*24支/箱',
      // color: '白色',
      isCollect: false,
      isAddCart: false,
      addCartNum: 0,
      // inventory: 100,
      buyNum: 0,
      totalPrice: 0,
      goodsList: [],
      totalBuy: 0,
      isMask: false, // 遮罩层
      chooseColor: '',
      isBuy: ''
    }
    methods = {
      // 关闭遮罩层
      closeMask() {
        this.isMask = false
        this.chooseColor = ''
        this.buyNum = 0
      },
      // 阻止弹出层底部穿透滚动
      myCatchTouch() {
        return false
      },
      // 选择购买详情
      chooseInfo(e) {
        var code = e.currentTarget.dataset.code
        this.isBuy = code
        // console.log(code)// 判断进入来源cart or buy
        this.isMask = true
      },
      chooseColor(e) {
        var color = e.currentTarget.dataset.color
        this.chooseColor = color
      },
      // 跳转到购物车
      jumpToCart() {
        // wepy.switchTab({ url: '/pages/cart' })
        wepy.navigateTo({ url: '/pages/_cart' })
      },
      // 是否收藏操作
      collectGood() {
        this.isCollect = !this.isCollect
        if (this.isCollect) {
          let idArr = {}
          idArr['idArr' + this.id] = this.id
          console.log(JSON.stringify(idArr), 'idArr')
          api.addCollect({
            data: {
              session3rd: this.session3rd,
              idArr: JSON.stringify(idArr)
            },
            method: 'POST'
          }).then(res => {
            console.log(res, '收藏商品')
            if (res.code === '200') {
              wepy.showToast({
                title: '成功加入收藏夹，可到我的-我的收藏中查看！',
                icon: 'none',
                duration: 2000,
                mask: false
              })
              this.getMyCollect()
            }
          })
        } else {
          let idArr = {}
          idArr['idArr' + this.delCollectId] = this.delCollectId
          console.log(JSON.stringify(idArr), 'idArr')
          api.delCollect({
            data: {
              session3rd: this.session3rd,
              idArr: JSON.stringify(idArr)
            },
            method: 'POST'
          }).then(res => {
            console.log(res, '取消收藏')
          })
        }
      },
      // 购买件数
      changeNum(num) {
        if (this.goodDesc.sec_num) {
          this.buyNum += num
          if (this.buyNum < 1) {
            this.buyNum = 1
          } else if (this.buyNum > this.goodDesc.sec_num) {
            this.buyNum = this.goodDesc.sec_num
            wepy.showToast({
              title: '商品数量不能大于库存剩余数量！',
              icon: 'none',
              duration: 2000,
              mask: false
            })
          }
        }
      },
      // 商品件数输入监控
      countNumberInput(e) {
        let inputNum = parseInt(e.detail.value)
        let oldNum = this.buyNum
        // 判断是否恶意输入值
        if (inputNum < 1 || isNaN(inputNum)) {
          this.buyNum = oldNum
          return oldNum
        } else if (inputNum > this.goodDesc.sec_num) {
          this.buyNum = this.goodDesc.sec_num
          wepy.showToast({
            title: '商品数量不能大于库存剩余数量！',
            icon: 'none',
            duration: 2000,
            mask: false
          })
          return this.goodDesc.sec_num
        } else {
          this.buyNum = inputNum
          return inputNum
        }
      },
      // 确定
      sendSure() {
        console.log(this.isBuy)
        if (this.isBuy === 'buy') {
        //   console.log(111)
          this.buyNowToPay()
        } else if (this.isBuy === 'cart') {
        //   console.log(222)
          this.addCart()
        }
      }
    }
    // 加入购物车
    addCart() {
      // 有库存才给添加
      if (this.goodDesc.sec_num) {
        if (this.buyNum !== 0 && this.chooseColor !== '') {
          this.isAddCart = true
          this.addCartNum = this.buyNum
          console.log((this.buyNum + this.totalBuy) < this.goodDesc.sec_num, '购买总数量')
          if ((this.buyNum + this.totalBuy) <= this.goodDesc.sec_num) {
            api.addToCart({
              data: {
                session3rd: this.session3rd,
                goods_id: this.id,
                num: this.buyNum,
                color: this.chooseColor
              },
              method: 'POST'
            }).then(res => {
              console.log(res, '添加购物车')
              if (res.code === '200') {
                // 获取购物车该商品的数量
                this.getMyCart()
                // 重置
                this.isMask = false
                this.chooseColor = ''
                this.buyNum = 0
                this.getMyCart()
              }
              wepy.showToast({
                title: res.message,
                icon: 'success',
                duration: 2000,
                mask: false
              })
            })
          } else {
            wepy.showToast({
              title: '购物车商品总数量不能大于库存数量!',
              icon: 'none',
              duration: 2000,
              mask: false
            })
          }
        } else {
          var _title = null
          if (this.chooseColor === '') {
            _title = '请先选择商品颜色'
          } else {
            _title = this.goodDesc.sec_num ? '请先选择商品数量!' : '商品暂无库存'
          }
          wepy.showToast({
            title: _title,
            icon: 'none',
            duration: 2000,
            mask: false
          })
          this.closeMask()
        }
      }
    }
    // 立即购买
    buyNowToPay() {
      // 有库存才给买
      if (this.goodDesc.sec_num) {
        if (this.buyNum !== 0 && this.chooseColor !== '') {
          // wepy.navigateTo({ url: `/pages/pay?type=buyNow&name=${this.name}&id=${this.id}&price=${this.price}&num=${this.buyNum}&size=${this.size}&color=${this.color}` })
          wepy.navigateTo({ url: `/pages/pay?type=buyNow&id=${this.id}&num=${this.buyNum}&price=${this.goodDesc.goods_price}&size=${this.goodDesc.type}&color=${this.chooseColor}&name=${this.goodDesc.goods_name}&image=${this.goodDesc.goods_image}&sec_num=${this.goodDesc.sec_num}` })
        } else {
          var _title = null
          if (this.chooseColor === '') {
            _title = '请先选择商品颜色'
          } else {
            _title = this.goodDesc.sec_num ? '请先选择商品数量!' : '商品暂无库存'
          }
          wepy.showToast({
            title: _title,
            icon: 'none',
            duration: 2000,
            mask: false
          })
        }
      }
    }
    // 获取我的收藏列表
    getMyCollect() {
      api.getCollect({
        data: {
          session3rd: this.session3rd
        },
        method: 'POST'
      }).then(res => {
        console.log(res, '收藏列表')
        res.extraData.info.forEach(item => {
          if (item.goods_id === this.id) {
            this.isCollect = true
            this.delCollectId = item.id
            this.$apply()
          }
        })
      })
    }
    // 获取我的购物车---检查商品是否被购买
    getMyCart() {
      api.getCart({
        data: {
          session3rd: this.session3rd
        },
        method: 'POST'
      }).then(res => {
        console.log(res, '购物车列表')
        if (res.code === '200') {
          this.goodsList = res.extraData.info
          // 将字符串数字转成数字
          // 检查当前商品是否被购买
          for (let i = 0; i < this.goodsList.length; i++) {
            this.goodsList[i].sec_num = +this.goodsList[i].sec_num
            this.goodsList[i].num = +this.goodsList[i].num
            if (this.goodsList[i].goods_id === this.id) {
              this.isAddCart = true
              this.totalBuy = +this.goodsList[i].num
            }
          }
          this.$apply()
        }
      })
    }
    computed = {
      // 立即购买时的总金额
      totalPrice() {
        this.totalPrice = this.buyNum * this.goodDesc.goods_price
        return this.totalPrice
      }
    }
  }
</script>
